/*
 * Utools_twitter_tools_api
 * X (Twitter) API for search, Tweets, users, followers, images, media and more. Supports some v1.1 and v2 API endpoints, with more to come in the future!
 *
 * OpenAPI spec version: 1.1
 * Contact: huojiecs@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.37
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UtoolsTwitterToolsApi);
  }
}(this, function(expect, UtoolsTwitterToolsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UtoolsTwitterToolsApi.TwitterSendTweesApiToolsApi();
  });

  describe('(package)', function() {
    describe('TwitterSendTweesApiToolsApi', function() {
      describe('createRetweetUsingGET', function() {
        it('should call createRetweetUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for createRetweetUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var tweetId = "1722885211313307819";

          instance.createRetweetUsingGET(apiKey, authToken, ct0, tweetId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createRetweetUsingPOST', function() {
        it('should call createRetweetUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for createRetweetUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var tweetId = "1722885211313307819";

          instance.createRetweetUsingPOST(apiKey, authToken, ct0, tweetId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createTweetUsingGET', function() {
        it('should call createTweetUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for createTweetUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var text = "this tweet by utools auto send by https://twitter.utools.me";
          var opts = {};
          opts.medias = ["medias_example"];

          instance.createTweetUsingGET(apiKey, authToken, ct0, text, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createTweetUsingPOST', function() {
        it('should call createTweetUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for createTweetUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var text = "this tweet by utools auto send by https://twitter.utools.me";
          var opts = {};
          opts.medias = ["medias_example"];

          instance.createTweetUsingPOST(apiKey, authToken, ct0, text, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('likeTweetUsingGET', function() {
        it('should call likeTweetUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for likeTweetUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var id = "1722138510680043555";

          instance.likeTweetUsingGET(apiKey, authToken, ct0, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('likeTweetUsingPOST', function() {
        it('should call likeTweetUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for likeTweetUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var id = "1722138510680043555";

          instance.likeTweetUsingPOST(apiKey, authToken, ct0, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('tweetReplyUsingGET', function() {
        it('should call tweetReplyUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for tweetReplyUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var text = "this tweet by utools auto send by https://twitter.utools.me";
          var tweetId = "1722885211313307819";
          var opts = {};
          opts.medias = ["medias_example"];

          instance.tweetReplyUsingGET(apiKey, authToken, ct0, text, tweetId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('tweetReplyUsingPOST', function() {
        it('should call tweetReplyUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for tweetReplyUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var text = "this tweet by utools auto send by https://twitter.utools.me";
          var tweetId = "1722885211313307819";
          var opts = {};
          opts.medias = ["medias_example"];

          instance.tweetReplyUsingPOST(apiKey, authToken, ct0, text, tweetId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unlikeTweetUsingGET', function() {
        it('should call unlikeTweetUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for unlikeTweetUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var id = "1722138510680043555";

          instance.unlikeTweetUsingGET(apiKey, authToken, ct0, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unlikeTweetUsingPOST', function() {
        it('should call unlikeTweetUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for unlikeTweetUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var id = "1722138510680043555";

          instance.unlikeTweetUsingPOST(apiKey, authToken, ct0, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('uploadMediaUsingGET', function() {
        it('should call uploadMediaUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for uploadMediaUsingGET call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var mediaUrl = "https://i0.wp.com/www.printmag.com/wp-content/uploads/2021/02/4cbe8d_f1ed2800a49649848102c68fc5a66e53mv2.gif?fit=476%2C280&ssl=1";

          instance.uploadMediaUsingGET(apiKey, authToken, ct0, mediaUrl, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('uploadMediaUsingPOST', function() {
        it('should call uploadMediaUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for uploadMediaUsingPOST call and complete the assertions
          /*
          var apiKey = "your own apikey";
          var authToken = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var ct0 = "get it 1:from login API, 2:https://twitter.com/chen22218/status/1722138510680043555";
          var mediaUrl = "https://i0.wp.com/www.printmag.com/wp-content/uploads/2021/02/4cbe8d_f1ed2800a49649848102c68fc5a66e53mv2.gif?fit=476%2C280&ssl=1";

          instance.uploadMediaUsingPOST(apiKey, authToken, ct0, mediaUrl, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(UtoolsTwitterToolsApi.ResultT);
            expect(data.code).to.be.a('number');
            expect(data.code).to.be(0);
            expect(data.data).to.be.a(Object);
            expect(data.data).to.be();
            expect(data.msg).to.be.a('string');
            expect(data.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
