/*
 * Utools_twitter_tools_api
 * X (Twitter) API for search, Tweets, users, followers, images, media and more. Supports some v1.1 and v2 API endpoints, with more to come in the future!
 *
 * OpenAPI spec version: 1.1
 * Contact: huojiecs@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.ResultT;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TwitterSearchApiToolsApi
 */
@Ignore
public class TwitterSearchApiToolsApiTest {

    private final TwitterSearchApiToolsApi api = new TwitterSearchApiToolsApi();

    
    /**
     * Advanced Search
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchUsingGETTest() throws Exception {
        String apiKey = null;
        String words = null;
        String any = null;
        String cursor = null;
        String from = null;
        String likes = null;
        String mentioning = null;
        String none = null;
        String phrase = null;
        String replies = null;
        String retweets = null;
        String since = null;
        String tag = null;
        String to = null;
        String until = null;
        ResultT response = api.searchUsingGET(apiKey, words, any, cursor, from, likes, mentioning, none, phrase, replies, retweets, since, tag, to, until);

        // TODO: test validations
    }
    
    /**
     * Advanced Search
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchUsingPOSTTest() throws Exception {
        String apiKey = null;
        String words = null;
        String any = null;
        String cursor = null;
        String from = null;
        String likes = null;
        String mentioning = null;
        String none = null;
        String phrase = null;
        String replies = null;
        String retweets = null;
        String since = null;
        String tag = null;
        String to = null;
        String until = null;
        ResultT response = api.searchUsingPOST(apiKey, words, any, cursor, from, likes, mentioning, none, phrase, replies, retweets, since, tag, to, until);

        // TODO: test validations
    }
    
    /**
     * trends Search
     *
     * see details https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-location/api-reference/get-trends-place
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void trendsUsingGETTest() throws Exception {
        String apiKey = null;
        String id = null;
        ResultT response = api.trendsUsingGET(apiKey, id);

        // TODO: test validations
    }
    
    /**
     * trends Search
     *
     * see details https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-location/api-reference/get-trends-place
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void trendsUsingPOSTTest() throws Exception {
        String apiKey = null;
        String id = null;
        ResultT response = api.trendsUsingPOST(apiKey, id);

        // TODO: test validations
    }
    
}
