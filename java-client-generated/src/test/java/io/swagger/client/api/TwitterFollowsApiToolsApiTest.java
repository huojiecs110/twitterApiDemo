/*
 * Utools_twitter_tools_api
 * X (Twitter) API for search, Tweets, users, followers, images, media and more. Supports some v1.1 and v2 API endpoints, with more to come in the future!
 *
 * OpenAPI spec version: 1.1
 * Contact: huojiecs@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.ResultT;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TwitterFollowsApiToolsApi
 */
@Ignore
public class TwitterFollowsApiToolsApiTest {

    private final TwitterFollowsApiToolsApi api = new TwitterFollowsApiToolsApi();

    
    /**
     * get blueVerifiedFollowers by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void blueVerifiedFollowersV2UsingGETTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.blueVerifiedFollowersV2UsingGET(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * get blueVerifiedFollowers by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void blueVerifiedFollowersV2UsingPOSTTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.blueVerifiedFollowersV2UsingPOST(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * to follow 
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followUsingGETTest() throws Exception {
        String apiKey = null;
        String authToken = null;
        String ct0 = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followUsingGET(apiKey, authToken, ct0, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * to follow 
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followUsingPOSTTest() throws Exception {
        String apiKey = null;
        String authToken = null;
        String ct0 = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followUsingPOST(apiKey, authToken, ct0, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followers Ids
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersIdsUsingGETTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followersIdsUsingGET(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followers Ids
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersIdsUsingPOSTTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followersIdsUsingPOST(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followers User Collection
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersListUsingGETTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followersListUsingGET(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followers User Collection
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersListUsingPOSTTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followersListUsingPOST(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * get followersList by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersListV2UsingGETTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.followersListV2UsingGET(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * get followersList by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followersListV2UsingPOSTTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.followersListV2UsingPOST(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * Get Followings Ids
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsIdsUsingGETTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followingsIdsUsingGET(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followings Ids
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsIdsUsingPOSTTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followingsIdsUsingPOST(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followings User Collection
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsListUsingGETTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followingsListUsingGET(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * Get Followings User Collection
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsListUsingPOSTTest() throws Exception {
        String apiKey = null;
        String cursor = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.followingsListUsingPOST(apiKey, cursor, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * get followingsList by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsListV2UsingGETTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.followingsListV2UsingGET(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * get followingsList by V2 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void followingsListV2UsingPOSTTest() throws Exception {
        String apiKey = null;
        String userId = null;
        String cursor = null;
        ResultT response = api.followingsListV2UsingPOST(apiKey, userId, cursor);

        // TODO: test validations
    }
    
    /**
     * Get relationship information between two users
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFriendshipsShowUsingGETTest() throws Exception {
        String apiKey = null;
        String sourceId = null;
        String sourceScreenName = null;
        String targetId = null;
        String targetScreenName = null;
        ResultT response = api.getFriendshipsShowUsingGET(apiKey, sourceId, sourceScreenName, targetId, targetScreenName);

        // TODO: test validations
    }
    
    /**
     * Get relationship information between two users
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFriendshipsShowUsingPOSTTest() throws Exception {
        String apiKey = null;
        String sourceId = null;
        String sourceScreenName = null;
        String targetId = null;
        String targetScreenName = null;
        ResultT response = api.getFriendshipsShowUsingPOST(apiKey, sourceId, sourceScreenName, targetId, targetScreenName);

        // TODO: test validations
    }
    
    /**
     * to unfollow 
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unfollowUsingGETTest() throws Exception {
        String apiKey = null;
        String authToken = null;
        String ct0 = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.unfollowUsingGET(apiKey, authToken, ct0, screenName, userId);

        // TODO: test validations
    }
    
    /**
     * to unfollow 
     *
     * See details https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unfollowUsingPOSTTest() throws Exception {
        String apiKey = null;
        String authToken = null;
        String ct0 = null;
        String screenName = null;
        String userId = null;
        ResultT response = api.unfollowUsingPOST(apiKey, authToken, ct0, screenName, userId);

        // TODO: test validations
    }
    
}
